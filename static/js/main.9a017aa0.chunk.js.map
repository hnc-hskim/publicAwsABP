{"version":3,"sources":["progress.js","UserContext.js","resources/ready.jpg","UploadPage.js","CombinationPage.js","SearchPage.js","resources/slide1.JPG","resources/slide2.JPG","resources/slide3.JPG","resources/slide4.JPG","resources/slide5.JPG","resources/slide6.JPG","resources/slide7.JPG","resources/slide8.JPG","resources/slide9.JPG","resources/slide10.JPG","resources/slide11.JPG","resources/slide12.JPG","Demo.js","App.js","reportWebVitals.js","index.js"],"names":["CircularProgressWithLabel","props","Box","position","display","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","value","CircularStatic","React","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","servers","local","name","url","test","product","UserContext","createContext","server","toggleServer","servername","changeServername","templateTypeOptions","categoryOptions","UploadPage","onFileChange","event","setState","selectedFile","target","files","onFileUpload","e","a","preventDefault","formData","FormData","append","state","templateType","selectTemplateType","defaultUpload","console","log","axiosConfig","headers","isOpen","isRun","axios","post","ServerUrl","then","response","copy","data","thumbnails","map","item","push","original","thumb","thumbnail","thumbnailImages","catch","error","fileData","type","lastModifiedDate","toDateString","onTemplateTypeChange","onCateforyChange","selectCategory","onDefaultUploadChange","UpdateServer","photoIndex","ready","this","Consumer","className","Autocomplete","options","defaultValue","style","width","renderInput","params","TextField","label","onChange","onClick","class","alignSelf","checked","items","additionalClass","styles","img","Component","Toast","msg","CombinationPage","onCombination","savePPTX","RefBackgroundImg","RefLayoutImg","RefForegroundImg","curBackgroundTemplate","curLayoutTemplate","curForegroundTemplate","isError","errMsg","backgroundIndex","current","getCurrentIndex","layoutIndex","foregroundIndex","isResult","Name","combinationname","resultThumbnailImages","enableDownload","onDownload","method","responseType","filename","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","onLoadTemplateList","newbg","newlayout","newforeground","templates","template","backgroundOptions","layoutOptions","foregroundOptions","onBackgroundTemplateChange","backgroundThumbnailImages","onLayoutTemplateChange","isLayoutOpen","layoutThumbnailImages","onForegroundTemplateChange","isForegroundOpen","foregroundThumbnailImages","onsavePPTXChange","createRef","disabled","image","ref","SearchPage","oldPreview","preview","getElementById","removeChild","i","length","file","startsWith","classList","add","reader","FileReader","onload","aImg","src","result","readAsDataURL","targetBox","copyKeyword","index","newlabels","labels","id","confidence","keywordOptions","recognitionResults","onKeywordOptions","newList","searchOptions","onSearchTemplateChange","curSearchTemplate","searchthumbnailImages","selectKeywordType","background","showThumbnails","showPlayButton","showFullscreenButton","Item","context","demo","slide1","slide2","slide3","slide4","slide5","slide6","slide7","slide8","slide9","slide10","slide11","slide12","App","newServer","Provider","Navigation","exact","activeClassName","to","Home","Upload","Search","Combination","About","Contact","Settings","Main","path","Demo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.9a017aa0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport default function CircularStatic() {\n  const [progress, setProgress] = React.useState(10);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return <CircularProgressWithLabel value={progress} />;\n}","import React, { Component } from \"react\";\n\nexport const servers = {\n  local: {\n    name: 'Local',\n    url: 'http://localhost:62557/' \n  },\n  test: {\n    name: 'Test',\n    url: 'http://ec2-3-35-207-83.ap-northeast-2.compute.amazonaws.com/' \n  },\n  product: {\n    name: 'Product',\n    url: 'http://layoutdesignerLoadBalancer-1418351197.ap-northeast-2.elb.amazonaws.com/' \n  },\n};\n\nexport const servername = 'unknown';\n\nexport const UserContext = React.createContext({\n  server: servers.local,\n  toggleServer: () => {},\n  servername: servername,\n  changeServername: () => {},\n});","export default __webpack_public_path__ + \"static/media/ready.a090bba9.jpg\";","import styles from './App.css';\nimport axios from 'axios';\nimport React from \"react\"; \nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Myprogress from './progress'\nimport ImageGallery from 'react-image-gallery';\n//import styles from '@react-image-gallery/styles/css/image-gallery.css'; \nimport {UserContext, servers} from './UserContext';\nimport ready from './resources/ready.jpg';\n\nconst templateTypeOptions = ['Background', 'Layout', 'Foreground'];\nconst categoryOptions = ['Default', 'Simple', 'Human', 'Car', 'Cat'];\n\n\n\n// http://localhost:62557/\n// http://ec2-3-35-207-83.ap-northeast-2.compute.amazonaws.com/\n\nexport default class UploadPage extends React.Component \n{   \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ServerUrl: \"http://ec2-3-35-207-83.ap-northeast-2.compute.amazonaws.com/\", \n      selectedFile: null,\n      photoIndex: 0,\n      isOpen: true,\n      isRun: false,\n      defaultUpload: false,\n      selectTemplateType: 'Background',\n      selectCategory: 'Simple',\n      thumbnailImages: [ \n        {\n            original: ready,\n            thumbnail: ready,\n          }           \n      ]\n    };\n  }\n  \n  // On file select (from the pop up)\n  onFileChange = event => {    \n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });    \n  };\n  \n  // On file upload (click the upload button)\n  onFileUpload = async e => {    \n    e.preventDefault();\n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\n      \"hskim\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    var templateType = this.state.selectTemplateType;\n    formData.append(\"selectTemplateType\", templateType);\n    formData.append(\"category\", \"test\");\n\n    if(this.state.defaultUpload)\n    {\n      formData.append(\"isDefaultTemplate\", \"true\");\n    }\n  \n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };\n\n    this.setState({ isOpen: false });   \n    this.setState({ isRun: true });\n\n    await axios.post(this.state.ServerUrl + 'api/LayoutDesigner', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;\n\n      this.setState({ isOpen: false });\n\n      const copy = [];\n\n      response.data.thumbnails.map((item) => {    \n        copy.push({ \n            original: item.thumb, \n            thumbnail : item.thumb  })\n      });\n\n      this.setState({ thumbnailImages: copy }); \n      this.setState({ isOpen: true })\n      this.setState({ isRun: false });\n    })\n    .catch( error => { \n      console.log('failed', error) \n      this.setState({ isRun: false });\n    })\n\n  };\n  \n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {  \n    if (this.state.selectedFile) {\n        \n      return (\n        <div>\n          <h2>File Details:</h2>             \n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  }; \n\n  onTemplateTypeChange = (event, value) => {  \n    // Update the state\n    this.setState({ selectTemplateType: value });    \n\n    //var templateType = this.state.selectTemplateType;\n    //console.debug(templateType);\n  };\n\n  onCateforyChange = value => {    \n    // Update the state\n    this.setState({ selectCategory: value });    \n  };\n\n  onDefaultUploadChange = value => {\n    const { defaultUpload } = this.state;\n\n    this.setState({ defaultUpload: !defaultUpload });\n  };\n\n  UpdateServer = (server) => {\n    const {ServerUrl} = this.state;\n\n    if(ServerUrl != server.url)\n      this.setState({ServerUrl: server.url})\n  }\n\n  render() {      \n    const { isOpen, isRun, defaultUpload, ServerUrl, thumbnailImages } = this.state;\n\n    return (\n      <div>\n        <div>\n          { <UserContext.Consumer> \n            {({server}) => this.UpdateServer(server)}\n          </UserContext.Consumer>  } \n\n          <div className=\"white-block-body\">                    \n               <Autocomplete\n                          options={templateTypeOptions}\n                          defaultValue={ templateTypeOptions[0] }\n                          style={{ width: 300 }}\n                          renderInput={(params) =>\n                          <TextField {...params} label=\"Template Type\" variant=\"outlined\" />}\n                          onChange={this.onTemplateTypeChange}\n                      />     \n              <Autocomplete\n                          options={categoryOptions}\n                          defaultValue={ categoryOptions[0] }\n                          style={{ width: 200 }}\n                          renderInput={(params) =>\n                          <TextField {...params} label=\"Category\" variant=\"outlined\" />}\n                          onChange={this.onCateforyChange}\n                      />    \n\n            {isRun && (\n                <Myprogress />\n            )}\n\n              <input className=\"smallclick\"  type=\"file\" onChange={this.onFileChange} />\n              <button className=\"smallclick\"  onClick={this.onFileUpload}> Upload! </button>\n              <label class=\"react-select--inline\" style={{alignSelf: 'center'}}>\n                <input type=\"checkbox\" \n                checked={defaultUpload}\n                onChange={this.onDefaultUploadChange}/>\n                기본템플릿\n              </label>                \n          </div>  \n          </div>      \n\n          \n            <div className=\"fileinfo\" >\n              {this.fileData()} \n            </div>       \n          \n          <div>\n          <div className=\"previewcontainer\" >\n            <div style={{width: 300}}>\n              {isOpen && (\n                  <ImageGallery items={thumbnailImages} additionalClass={styles.img} />            \n              )} \n            </div>\n          </div> \n        <div>\n        </div>        \n      </div>\n    </div>\n    );\n  }\n}","import React, { Component, useRef, useState, setState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './App.css';\nimport axios from 'axios';\nimport ImageGallery from 'react-image-gallery';\nimport styles from \"react-image-gallery/styles/css/image-gallery.css\";\nimport Myprogress from './progress'\nimport {UserContext, servers} from './UserContext';\n\n// http://ec2-3-35-207-83.ap-northeast-2.compute.amazonaws.com/\n// http://localhost:62557/\n\nexport function Toast({ msg = \"메세지 없음\" }) {\n\n  return (\n    <>\n      <div className=\"toast\">{msg}</div>\n    </>\n  );\n}\n\nexport default class CombinationPage extends Component \n{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ServerUrl: \"http://ec2-3-35-207-83.ap-northeast-2.compute.amazonaws.com/\",\n      RefBackgroundImg: React.createRef(),\n      RefLayoutImg: React.createRef(),\n      RefForegroundImg: React.createRef(),       \n      curBackgroundTemplate: \"\",\n      curLayoutTemplate: \"\",\n      curForegroundTemplate: \"\",\n      isOpen: false,\n      isRun: false,\n      enableDownload: true,\n      isLayoutOpen: false,\n      isForegroundOpen: false,\n      isResult: false,\n      savePPTX: false,\n      isError: false,\n      errMsg: \"\",\n      combinationname: \"\",\n      backgroundOptions : ['default'],\n      layoutOptions: ['default'],\n      foregroundOptions: ['default'],\n      resultThumbnailImages : [ \n        {\n            original: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n            thumbnail: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n          }           \n      ],\n      backgroundThumbnailImages: [ \n        {\n            original: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n            thumbnail: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n          }           \n      ],\n      layoutThumbnailImages: [ \n        {\n            original: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n            thumbnail: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n          }           \n      ],\n      foregroundThumbnailImages: [ \n        {\n            original: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n            thumbnail: 'https://layoutdesigner-thumbnail-bucket.s3.ap-northeast-2.amazonaws.com/Resources/ready.jpg',\n          }           \n      ]\n    };\n  }  \n\n  onChange = (event) => {\n      this.setState({ isOpen: true });\n  }; \n\n  // 템플릿 조합\n  onCombination = async e => {\n    const { isRun, savePPTX, RefBackgroundImg, RefLayoutImg, RefForegroundImg, curBackgroundTemplate, curLayoutTemplate, curForegroundTemplate } = this.state;\n    \n    this.setState({ isError: false });\n\n    if( curBackgroundTemplate === \"\")\n    {       \n      this.setState({ isError: true });\n      this.setState({ errMsg: \"배경 템플릿을 선택하세요.\" });\n      return;\n    }\n    \n    if( curLayoutTemplate === \"\")\n    {       \n      this.setState({ isError: true });\n      this.setState({ errMsg: \"레이아웃 템플릿을 선택하세요.\" });\n      return;\n    }\n    \n    if( curForegroundTemplate === \"\")\n    {       \n      this.setState({ isError: true });\n      this.setState({ errMsg: \"전경 템플릿을 선택하세요.\" });\n    }\n\n    var backgroundIndex = RefBackgroundImg.current.getCurrentIndex();\n    var layoutIndex = RefLayoutImg.current.getCurrentIndex();\n    var foregroundIndex = RefForegroundImg.current.getCurrentIndex();\n\n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\"UserId\", \"hskim\");\n    formData.append(\"SavePPTX\", savePPTX);\n    formData.append(\"BackgroundTemplate\", curBackgroundTemplate);    \n    formData.append(\"LayoutTemplate\", curLayoutTemplate);\n    formData.append(\"ForegroundTemplate\", curForegroundTemplate);\n\n    formData.append(\"BackgroundTemplateIndex\", backgroundIndex);\n    formData.append(\"LayoutTemplateIndex\", layoutIndex);    \n    formData.append(\"ForegroundTemplateIndex\", foregroundIndex);\n\n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };    \n\n    this.setState({ isRun: true })\n    this.setState({ isResult: false });\n\n    await axios.post(this.state.ServerUrl + 'api/Combination', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;      \n\n      const copy = [];\n\n      var combinationfilename = response.data.Name;\n      this.setState({ combinationname: response.data.Name});\n\n      response.data.thumbnails.map((item) => {    \n        copy.push({ \n            original: item.thumb, \n            thumbnail : item.thumb  })\n      });\n\n      this.setState({ resultThumbnailImages: copy }); \n      this.setState({ isResult: true })\n      this.setState({ isRun: false })\n      this.setState({ enableDownload: false })      \n    })\n    .catch( error => { \n      console.log('failed', error) \n      this.setState({ isRun: false })\n    }) \n  }\n\n  // 템플릿 다운로드\n  onDownload = async e => {\n    const { combinationname } = this.state;\n    \n    axios({\n      url: this.state.ServerUrl + 'api/Combination',\n      method: 'GET',\n      responseType: 'blob', // important\n      params: {\n        filename: combinationname\n      }\n    }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        if(this.state.savePPTX)\n          link.setAttribute('download', 'test.pptx'); //or any other extension\n        else\n          link.setAttribute('download', 'test.tlx'); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n    });\n    \n  }\n\n  // 템플릿 목록 업데이트\n  onLoadTemplateList = async e => { \n\n    this.setState({ isOpen: false });\n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\"TemplateList\", \"All\");\n\n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };    \n\n    await axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;     \n\n      const newbg = [];\n      const newlayout = [];\n      const newforeground = [];\n\n      response.data.templates.map((item) => {    \n        if(item.type === \"Background\")\n          newbg.push(item.template)\n        else if(item.type === \"Layout\")\n          newlayout.push(item.template)\n        else if(item.type === \"Foreground\")\n          newforeground.push(item.template)\n      }); \n\n      this.setState({ backgroundOptions: newbg }); \n      this.setState({ layoutOptions: newlayout }); \n      this.setState({ foregroundOptions: newforeground }); \n\n    })\n    .catch( error => { \n      console.log('failed', error) \n    })\n  };    \n\n  // onUpdateControl = async e => {    \n  //     e.preventDefault();\n  \n  //     // Create an object of formData\n  //     const formData = new FormData();\n    \n  //     // Update the formData object\n  //     formData.append(\"GetBackgroundList\", \"1\");\n    \n  //     // Details of the uploaded file\n  //     console.log(this.state.selectedFile);\n  \n  //     var axiosConfig = {\n  //       headers: {\n  //           'Content-Type': 'multipart/form-data',\n  //           \"Access-Control-Allow-Origin\": \"*\",\n  //           'Accept': '*',\n  //       }\n  //     };\n  \n  //     this.setState({ isOpen: false }) \n\n  //     await axios.post(this.state.ServerUrl + 'api/LayoutDesigner', formData, axiosConfig)      \n  //     .then( response => { \n  //       console.log('response : ', response) ;\n\n  //       images = response.data.thumbnail;\n  \n  //       this.setState({ isOpen: true })\n  //     })\n  //     .catch( error => { \n  //       console.log('failed', error) \n  //     })\n  \n  //   };    \n\n\n  // 배경 템플릿 선택 변경\n  onBackgroundTemplateChange = (event, value) => {  \n      \n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\"GetBackgroundThumbnailList\", value);    \n  \n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };\n\n    this.setState({ curBackgroundTemplate: value});\n\n    axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;\n\n      this.setState({ isOpen: false });\n\n      const copy = [];\n\n      response.data.thumbnails.map((item) => {    \n        copy.push({ \n            original: item.thumb, \n            thumbnail : item.thumb  })\n      });\n\n      this.setState({ backgroundThumbnailImages: copy }); \n      this.setState({ isOpen: true })\n    })\n    .catch( error => { \n      console.log('failed', error) \n    })\n    };\n\n    // 레이아웃 템플릿 선택 변경\n    onLayoutTemplateChange = (event, value) => {  \n      \n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\"GetLayoutThumbnailList\", value);    \n    \n      var axiosConfig = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            \"Access-Control-Allow-Origin\": \"*\",\n            'Accept': '*',\n        }\n      };\n  \n      this.setState({ curLayoutTemplate: value}); \n  \n      axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n      .then( response => { \n        console.log('response : ', response) ;\n  \n        this.setState({ isLayoutOpen: false });\n  \n        const copy = [];\n  \n        response.data.thumbnails.map((item) => {    \n          copy.push({ \n              original: item.thumb, \n              thumbnail : item.thumb  })\n        });\n  \n        this.setState({ layoutThumbnailImages: copy }); \n        this.setState({ isLayoutOpen: true })\n      })\n      .catch( error => { \n        console.log('failed', error) \n      })\n      };\n\n      // 전경 템플릿 선택 변경\n      onForegroundTemplateChange = (event, value) => {  \n      \n        // Create an object of formData\n        const formData = new FormData();\n      \n        // Update the formData object\n        formData.append(\"GetForegroundThumbnailList\", value);    \n      \n        var axiosConfig = {\n          headers: {\n              'Content-Type': 'multipart/form-data',\n              \"Access-Control-Allow-Origin\": \"*\",\n              'Accept': '*',\n          }\n        };\n    \n        this.setState({ curForegroundTemplate: value}); \n    \n        axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n        .then( response => { \n          console.log('response : ', response) ;\n    \n          this.setState({ isForegroundOpen: false });\n    \n          const copy = [];\n    \n          response.data.thumbnails.map((item) => {    \n            copy.push({ \n                original: item.thumb, \n                thumbnail : item.thumb  })\n          });\n    \n          this.setState({ foregroundThumbnailImages: copy }); \n          this.setState({ isForegroundOpen: true })\n        })\n        .catch( error => { \n          console.log('failed', error) \n        })\n    };\n\n    // PPTX로 저장 체크박스 \n    onsavePPTXChange = value => {\n      const { savePPTX } = this.state;\n      this.setState({ savePPTX: !savePPTX });\n    };\n\n    UpdateServer = (server) => {\n      const {ServerUrl} = this.state;\n  \n      if(ServerUrl != server.url)\n        this.setState({ServerUrl: server.url})\n    }\n\n    render() {\n      const btnStyle = {\n        color: \"teal\",\n        background: \"white\",\n        padding: \".775rem .75rem\",\n        border: \"1px solid teal\",\n        borderRadius: \".25rem\",\n        fontSize: \"1rem\",\n        lineHeight: 1.5,        \n      };\n\n      const { RefBackgroundImg, RefLayoutImg, RefForegroundImg, isOpen, isError, errMsg, enableDownload, isLayoutOpen, isRun, isForegroundOpen, isResult, savePPTX, backgroundOptions, layoutOptions, foregroundOptions, resultThumbnailImages, backgroundThumbnailImages, layoutThumbnailImages, foregroundThumbnailImages } = this.state;\n\n      return (\n        <div>\n          <div className=\"row\">\n            <h3>Combination Template</h3>\n            {isRun && (\n                <Myprogress />\n            )}\n          </div>\n        \n        <br/> \n\n        { isError && (\n             <Toast msg = {errMsg} />\n        )}       \n\n        { <UserContext.Consumer> \n            {({server}) => this.UpdateServer(server)}\n          </UserContext.Consumer>  } \n        \n        <div className=\"combination-block-body\">        \n          <button className=\"click\" onClick={this.onLoadTemplateList}> Load </button>\n          <button className=\"click\" onClick={this.onCombination}> Combination </button>\n          <button className=\"click\" onClick={this.onDownload} disabled={enableDownload} > Download </button>\n          <label class=\"react-select--inline\">\n              <input type=\"checkbox\" \n              checked={savePPTX}\n              onChange={this.onsavePPTXChange}/>\n              PPTX로 변환\n            </label>\n        </div>\n\n        <div class=\"combination-list-body\">            \n          <Autocomplete\n              options={backgroundOptions}\n              style={{ width: 300 }}\n              renderInput={(params) =>\n              <TextField {...params} label=\"Background\" variant=\"outlined\" />}\n              onChange={ this.onBackgroundTemplateChange }\n          />        \n          <Autocomplete\n          options={layoutOptions}\n          style={{ width: 300 }}\n          renderInput={(params) =>\n          <TextField {...params} label=\"Layout\" variant=\"outlined\" />}\n          onChange={ this.onLayoutTemplateChange }\n          />       \n          <Autocomplete\n                options={foregroundOptions}\n                style={{ width: 300 }}\n                renderInput={(params) =>\n                <TextField {...params} label=\"Foreground\" variant=\"outlined\" />}\n                onChange={ this.onForegroundTemplateChange }\n            />   \n          </div>\n          <div>           \n        </div>\n        <div class=\"searchcontainer\">\n          <div style={{width: 300}}>\n          {isOpen && (\n                    <ImageGallery items={backgroundThumbnailImages} \n                    additionalClass={styles.image} \n                    ref={RefBackgroundImg} \n                    />\n                )}\n          </div>\n          <div style={{width: 300}}>\n          {isLayoutOpen && (\n              <ImageGallery items={layoutThumbnailImages} \n              additionalClass={styles.image}\n              ref={RefLayoutImg} />\n          )} \n          </div>\n          <div style={{width: 300}}>\n          {isForegroundOpen && (\n                      <ImageGallery items={foregroundThumbnailImages} \n                      additionalClass={styles.image}\n                      ref={RefForegroundImg} />\n                  )}  \n          </div>\n        </div>\n        <br /> \n\n        {isResult && (\n          <div className=\"previewcontainer\" >\n            <div style={{width: 300}}>            \n              <ImageGallery items={resultThumbnailImages} />            \n            </div>\n          </div>\n        )}\n        \n        </div>        \n      );\n    }\n  } \n\n  function Test(thumbnailImages) {\n    const [inputs, setInputs] = useState({\n        original: '',\n        thumbnail: ''\n      });\n\n      const { original, thumbnail } = inputs;\n      const onChange = e => {\n        const { name, value } = e.target;\n        setInputs({\n          ...inputs,\n          [name]: value\n        });         \n      };\n\n      const [images, setImages] = useState([\n        {\n            id: 1,\n            original: 'https://picsum.photos/id/1018/1000/600/',\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\n          },\n          {\n            id: 2,\n            original: 'https://picsum.photos/id/1015/1000/600/',\n            thumbnail: 'https://picsum.photos/id/1015/250/150/',\n          },\n          {\n            id: 3,\n            original: 'https://picsum.photos/id/1019/1000/600/',\n            thumbnail: 'https://picsum.photos/id/1019/250/150/',\n          },\n      ]);\n    \n      const nextId = useRef(4);\n      const onCreate = () => {\n        const item = { \n          original,\n          thumbnail\n        };\n        setImages([...images, item]);\n    \n        setInputs({\n            original: '',\n            thumbnail: ''\n        });\n        nextId.current += 1;\n        \n        thumbnailImages = [...images]; \n      };\n      return (\n        <>\n          <CreateItem\n            original={original}\n            thumbnail={thumbnail}\n            onChange={onChange}\n            onCreate={onCreate}\n          />\n          <ImageList images={images} />\n        </>\n      );\n  }\n\n  function CreateItem({ original, thumbnail, onChange, onCreate }) {\n    return (\n      <div>\n        <input\n          name=\"original\"\n          placeholder=\"원본이미지\"\n          onChange={onChange}\n          value={original}\n        />\n        <input\n          name=\"thumbnail\"\n          placeholder=\"썸네일이미지\"\n          onChange={onChange}\n          value={thumbnail}\n        />\n        <button onClick={onCreate}>등록</button>\n      </div>\n    );\n  }\n\n  function Item({ item }) {\n    return (\n      <div>\n        <b>{item.original}</b> <span>({item.thumbnail})</span>\n      </div>\n    );\n  }\n  \n  function ImageList({ images }) {\n    return (\n      <div>\n        {images.map(item => (\n          <Item item={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n  \n\n","import React, { Component, useRef, useState, setState, useContext } from 'react';\nimport styles from './App.css'; \nimport axios from 'axios'; \nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Myprogress from './progress'\n\nimport ImageGallery from 'react-image-gallery';\n//import styles from '@react-image-gallery/styles/css/image-gallery.css';  \nimport {UserContext, servers} from './UserContext';\nimport ready from './resources/ready.jpg';\n\nexport default class SearchPage extends React.Component \n{   \n  static context = UserContext; \n\n  constructor(props) {\n    super(props); \n\n    this.state = {\n      ServerUrl: 'http://localhost:62557/', \n      selectedFile: null,\n      oldPreview: null,\n      isOpen: true,       \n      isRun: false,\n      selectKeywordType: '',\n      thumbnailImages: [ \n        {\n            original: ready,\n            thumbnail: ready,\n          }           \n      ],\n      searchthumbnailImages: [ \n        {\n            original: ready,\n            thumbnail: ready,\n          }           \n      ],\n      recognitionResults: [ \n      ],\n      keywordOptions: ['none', 'Combination'],\n      searchOptions : [],\n      curSearchTemplate: \"\",\n    }  \n  } \n  \n  // On file select (from the pop up)\n  onFileChange = event => {    \n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });  \n    \n    // var fil = document.getElementById(\"myFile\");\n\n    // const copy = [];\n\n    // copy.push({ \n    //     original: fil.value, \n    //     thumbnail : fil.value  });\n\n    // this.setState({ thumbnailImages: copy }); \n    // this.setState({ isOpen: true })\n\n    const { oldPreview } = this.state;\n\n    var preview = document.getElementById(\"preview\");\n    if(oldPreview != null)\n      preview.removeChild(oldPreview);\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      const file = event.target.files[i];\n  \n      if (!file.type.startsWith('image/')){ continue }       \n  \n      // const img = document.createElement(\"img\", {id : 'previewimg'}, this.props.paragraph);\n      const img = document.createElement(\"img\", {className: 'photo'}, 'styled');\n       \n      img.classList.add(\"photo\");\n      img.file = file;\n      preview.appendChild(img); // \"preview\"가 결과를 보여줄 div 출력이라 가정.\n\n      this.setState({ oldPreview: img });  \n  \n      const reader = new FileReader();\n      reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\n      reader.readAsDataURL(file);\n    }\n\n  };\n  \n  // On file upload (click the upload button)\n  onFileUpload = async e => {    \n    e.preventDefault();  \n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\n      \"recognition\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    ); \n\n    formData.append(\"Recognition\", \"true\");\n    formData.append(\"userId\", \"hskim\"); \n  \n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };\n\n    this.setState({ isOpen: false })  \n    this.setState({ isRun: true })   \n\n    const { ServerUrl } = this.state;\n\n    await axios.post(ServerUrl + 'api/Search', formData, axiosConfig)      \n    .then( response => { \n        console.log('response : ', response) ;\n\n        this.setState({ isOpen: false });\n        \n        const copy = [];\n        copy.push({ \n            original: response.data.target, \n            thumbnail : response.data.target  });\n\n        copy.push({ \n            original: response.data.targetBox, \n            thumbnail : response.data.targetBox  });\n\n        this.setState({ thumbnailImages: copy });         \n\n        const copyKeyword = [];\n        var index = 0;\n        const newlabels = [];\n        response.data.labels.map((item) => {    \n            newlabels.push({ \n                id: index,\n                label: item.name, \n                confidence : item.confidence  }); \n\n            copyKeyword.push(item.name);\n\n            index += 1;\n        });  \n\n        this.setState({ keywordOptions: copyKeyword })\n        this.setState({ recognitionResults: newlabels });\n        this.setState({ isOpen: true })\n        this.setState({ isRun: false })\n    })\n    .catch( error => { \n      console.log('failed', error)\n      this.setState({ isRun: false }) \n    })\n\n  };\n  \n  // File content to be displayed after\n  // file upload is complete\n  fileData = () => {  \n    if (this.state.selectedFile) {\n        \n      return (\n        <div>\n          <h2>File Details:</h2>             \n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };  \n\n  UpdateServer = (server) => {\n    const {ServerUrl} = this.state;\n\n    if(ServerUrl != server.url)\n      this.setState({ServerUrl: server.url})\n  }\n   \n  // 키워드로 템플릿 조회\n  onKeywordOptions = async (event, value) => {  \n      \n    //this.setState({ isOpen: false });\n\n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\"UserTemplateList\", value);\n\n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };    \n\n    await axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;     \n\n      const newList = []; \n\n      response.data.templates.map((item) => {         \n        newList.push(item.template) \n      }); \n\n      this.setState({ searchOptions: newList }); \n\n    })\n    .catch( error => { \n      console.log('failed', error) \n    })\n  };\n \n  // 검색 템플릿 선택 변경\n  onSearchTemplateChange = async (event, value) => {  \n      \n    // Create an object of formData\n    const formData = new FormData();\n  \n    // Update the formData object\n    formData.append(\"GetUserTemplate\", value);    \n  \n    var axiosConfig = {\n      headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Accept': '*',\n      }\n    };\n\n    this.setState({ curSearchTemplate: value});\n\n    axios.post(this.state.ServerUrl + 'api/Information', formData, axiosConfig)      \n    .then( response => { \n      console.log('response : ', response) ;\n\n      this.setState({ isOpen: false });\n\n      const copy = [];\n\n      response.data.thumbnails.map((item) => {    \n        copy.push({ \n            original: item.thumb, \n            thumbnail : item.thumb  })\n      });\n\n      this.setState({ searchthumbnailImages: copy }); \n      this.setState({ isOpen: true })\n    })\n    .catch( error => { \n      console.log('failed', error) \n    })\n    };\n\n  render() {      \n    const { isOpen, isRun, thumbnailImages, searchthumbnailImages, recognitionResults, keywordOptions, searchOptions } = this.state; \n\n    return (\n      <div>\n        <div>\n          { <UserContext.Consumer> \n            {({server}) => this.UpdateServer(server)}\n          </UserContext.Consumer>  }  \n\n          <div className=\"combination-block-body\">\n              <input id=\"myFile\" className=\"smallclick\"  type=\"file\" onChange={this.onFileChange} style={{background: 'gray', width: 400}} />\n              <button className=\"smallclick\"  onClick={this.onFileUpload}> Upload! </button>\n              {isRun && (\n                <Myprogress />\n            )}             \n          </div>  \n          </div>       \n          <div className=\"block-file-body\">      \n            <div id=\"preview\" className=\"previewimg\" />              \n            <div className=\"search-fileinfo\" >\n              {this.fileData()} \n            </div>       \n          </div>\n        <div>\n        <div className=\"searchcontainer\" >           \n          \n                <ImageGallery items={thumbnailImages} style={styles.image} />            \n          \n           \n          <div className=\"column-box\">\n            <Autocomplete\n                options={keywordOptions}\n                defaultValue={ keywordOptions[0] }\n                style={{ width: 300 }}\n                renderInput={(params) =>\n                <TextField {...params} label=\"Select Keyword\" variant=\"outlined\" />}\n                onChange={this.onKeywordOptions}\n            />    \n            <div className=\"recognitionResult\">          \n              {recognitionResults.map(item => (\n                <Item item={item} key={item.id} />\n              ))}        \n            </div>\n          </div>         \n             \n          <div className=\"column-box\">\n            <Autocomplete\n                    options={searchOptions}\n                    renderInput={(params) =>\n                    <TextField {...params} label=\"Results\" variant=\"outlined\" />}\n                    onChange={ this.onSearchTemplateChange }\n            />               \n\n            <div>\n              <ImageGallery items={searchthumbnailImages} style={styles.img} showThumbnails={false} showPlayButton={false} showFullscreenButton={false}  />\n            </div>\n            <button className=\"smallclick\" > Downlaod! </button>\n          </div>\n      </div>\n      </div>\n    </div>\n    );\n  }\n} \n\n  function Item({ item }) {\n    return (\n      <div>\n        <b>{item.label}</b> <span>({item.confidence})</span>\n      </div>\n    );\n  } ","export default __webpack_public_path__ + \"static/media/slide1.e1a3dbe4.JPG\";","export default __webpack_public_path__ + \"static/media/slide2.8651e002.JPG\";","export default __webpack_public_path__ + \"static/media/slide3.51c3cf72.JPG\";","export default __webpack_public_path__ + \"static/media/slide4.06d8cb3f.JPG\";","export default __webpack_public_path__ + \"static/media/slide5.a9e603eb.JPG\";","export default __webpack_public_path__ + \"static/media/slide6.f55f9bd9.JPG\";","export default __webpack_public_path__ + \"static/media/slide7.8fc67c0f.JPG\";","export default __webpack_public_path__ + \"static/media/slide8.183a104a.JPG\";","export default __webpack_public_path__ + \"static/media/slide9.18ddec8b.JPG\";","export default __webpack_public_path__ + \"static/media/slide10.fab6dc8e.JPG\";","export default __webpack_public_path__ + \"static/media/slide11.3c97419d.JPG\";","export default __webpack_public_path__ + \"static/media/slide12.9aaa117d.JPG\";","import styles from './App.css';\nimport axios from 'axios';\nimport React from \"react\"; \nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Myprogress from './progress'\nimport ImageGallery from 'react-image-gallery'; \nimport {UserContext, servers} from './UserContext'; \n\nimport slide1 from './resources/slide1.JPG'\nimport slide2 from './resources/slide2.JPG'\nimport slide3 from './resources/slide3.JPG'\nimport slide4 from './resources/slide4.JPG'\nimport slide5 from './resources/slide5.JPG'\nimport slide6 from './resources/slide6.JPG'\nimport slide7 from './resources/slide7.JPG'\nimport slide8 from './resources/slide8.JPG'\nimport slide9 from './resources/slide9.JPG'\nimport slide10 from './resources/slide10.JPG'\nimport slide11 from './resources/slide11.JPG'\nimport slide12 from './resources/slide12.JPG'\n\nexport default class demo extends React.Component { \n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n           thumbnailImages: [ \n            {\n                original: slide1,\n                thumbnail: slide1\n            },\n            {\n                original: slide2,\n                thumbnail: slide2\n            },\n            {\n                original: slide3,\n                thumbnail: slide3\n            },\n            {\n                original: slide4,\n                thumbnail: slide4\n            },\n            {\n                original: slide5,\n                thumbnail: slide5\n            },\n            {\n                original: slide6,\n                thumbnail: slide6\n            },\n            {\n                original: slide7,\n                thumbnail: slide7\n            },\n            {\n                original: slide8,\n                thumbnail: slide8\n            },\n            {\n                original: slide9,\n                thumbnail: slide9\n            },\n            {\n                original: slide10,\n                thumbnail: slide10\n            },\n            {\n                original: slide11,\n                thumbnail: slide11\n            },\n            {\n                original: slide12,\n                thumbnail: slide12\n            },\n          ]\n        };\n    }\n\n    render() {\n    const { thumbnailImages } = this.state;\n\n    return (\n        <div> \n            <ImageGallery items={thumbnailImages} additionalClass={styles.img}/>      \n        </div> \n      );\n    }\n  }\n  ","import './App.css';\nimport React, { Component } from \"react\";\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport UploadPage from './UploadPage'\nimport CombinationPage from './CombinationPage';\nimport SearchPage from './SearchPage'\nimport Demo from './Demo'\nimport {UserContext, servers} from './UserContext';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);   \n\n    this.toggleServer = () => {\n      const {server, servername} = this.state;\n\n      var newServer;\n      if(server == servers.local)\n        newServer = servers.test;\n      else if(server == servers.test)\n        newServer = servers.product;\n      else if(server == servers.product)\n        newServer = servers.local;\n\n      this.setState(state => ({\n        server: newServer,\n        ServerUrl: newServer.url,\n        servername: 'unknown'\n      })); \n    };\n\n    this.changeServername = () => { \n      axios({\n        url: this.state.ServerUrl + 'api/Information/0',\n        method: 'GET', \n      }).then((response) => {\n        this.setState(state => ({         \n          servername: response.data.Name\n        })); \n           \n      });      \n    };   \n\n    this.state = {\n      server: servers.local,\n      toggleServer: this.toggleServer, \n      ServerUrl: servers.local.url,\n      servername: 'unknown', \n      changeServername: this.changeServername, \n    };\n  }\n\n  UpdateServer = (server) => {\n    const {ServerUrl} = this.state;\n\n    if(ServerUrl != server.url)\n      this.setState({ServerUrl: server.url})\n  }\n\n  render() { \n    const { ServerUrl } = this.state;\n    return (\n      <div className='app'>\n        <h1>LayoutDesiger API(s)</h1>\n           \n          <TextField label=\"Server\" variant=\"outlined\" value={ServerUrl} style = {{width: 600}}/>\n\n        <UserContext.Provider value={this.state}>\n          <Navigation />\n        </UserContext.Provider>  \n        <UserContext.Provider value={this.state}>\n          <Main />\n        </UserContext.Provider>\n      </div>       \n    );\n  }\n}\n\nconst Navigation = () => (\n   \n  <nav>\n    <ul>\n      <li><NavLink exact activeClassName=\"current\" to='/'>Home</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/upload'>Upload</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/search'>Search</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/combination'>Combination</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/about'>About</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/contact'>Contact</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/settings'>Settings</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/demo'>Demo</NavLink></li>\n    </ul>\n  </nav>\n);\n\nconst Home = () => (\n  <div className='home'>\n    <h1>Welcome to LayoutDesginer React App website</h1>\n    <p> Enjoy this site.</p>\n\n    <hr></hr>\n    <p> 설명 : </p>\n    <p>사용자가 선택한 템플릿 요소(배경, 전경, 레이아웃)들을 조합해 프리젠테이션 템플릿을 생성하고 이를 사용자에게 다운로드 할 수 있도록 하는 서비스</p>\n\n    <hr></hr>\n    <p> 요구사항 </p>\n    <p>1. 사용자 파일 업로드 가능(디자인 서식 추가)</p>\n    <p>2. 템플릿 조합 기능 제공</p>\n    <p>3. 생성된 템플릿 다운로드 제공</p>\n    <p>4. 이미지 기반 템플릿 서칭 기능 제공</p>\n  </div>\n);\n\nconst Upload = () => (\n  <div className='upload'>\n    <UploadPage />\n  </div>\n);\n\nconst Search = () => (\n  <div className='search'>\n    <SearchPage />\n  </div>\n);\n\nconst Combination = () => (\n  <div className='combination'>\n    <CombinationPage />\n  </div>\n);\n\nconst About = () => (\n  <div className='about'>\n    <h1>About Me</h1>\n    <p>AWS ABP - LayoutDesigner API Test</p>\n  </div>\n);\n\nconst Contact = () => (\n  <div className='contact'>\n    <h1>Contact Me</h1>\n    <p>You can reach me via email: <strong>hskim@hancom.com</strong></p>\n  </div>\n);\n\nclass Settings extends React.Component { \n  render() {\n    return (\n      <div>       \n\n      <UserContext.Consumer>\n        {({server, toggleServer, servername, changeServername}) => (         \n          <div>\n            <div>\n            <button onClick={toggleServer}> Change Server </button>\n            <p>{`Current Server(${server.name}): ${server.url}`}</p>  \n            </div>\n\n            <div>\n              <button onClick={changeServername}> Get Server Name </button>\n              <p>{`Current Server Name(${servername})`}</p>  \n            </div>\n          </div>\n        )}\n      </UserContext.Consumer>      \n      </div> \n    );\n  }\n}\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path='/' component={Home}></Route>\n    <Route exact path='/upload' component={Upload}></Route>\n    <Route exact path='/search' component={Search}></Route> \n    <Route exact path='/combination' component={Combination}></Route>\n    <Route exact path='/about' component={About}></Route>\n    <Route exact path='/contact' component={Contact}></Route>\n    <Route exact path='/settings' component={Settings}></Route>\n    <Route exact path='/demo' component={Demo}></Route>\n  </Switch>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}